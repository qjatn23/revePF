<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="org.zerock.myreview.mapper.MyreviewMapper">
  
  <select id="list" resultType="org.zerock.myreview.vo.MyreviewVO">
  select rno, title, content, id, writeDate, filename, stars 
  from (
  	select rownum rnum, rno, title, content, id, writeDate, filename, stars
  	from (
  		select rno, title, content, id, writeDate, filename, stars
  		from review
		<include refid="search"></include>
		order by rno desc
  	)
  )
  where rnum between #{startRow} and #{endRow}
  </select>
  
  <select id="getTotalRow" resultType="Long">
  		select count(*) from review
  		<include refid="search"></include>
  </select>
  
  	<!-- 일반게시판 리스트 검색 처리 -->
  	<!-- sql 태그는 함수라고 생각하면 편리합니다. -->
  	<sql id="search">
  	<!-- 검색어가 없거나 null일때 동작하지 않도록 처리 -->
  	<if test="word != null and word != ''.toString()">
  		<!-- trim안의 쿼리문 작성후 제일앞에 where 붙이고 where 다음에 나오는 or는 제거합니다. -->
		<trim prefix="where" prefixOverrides="or">
			 <!-- t(제목) 이 있으면 -->
			<if test="key.indexOf('t') >= 0">
				<!-- '%' || #{word} || '%' => 하나의 문자열로 만들어 줍니다.(oracle) -->
				or title like '%' || #{word} || '%' 
			</if>
			<if test="key.indexOf('c') >= 0">
				or content like '%' || #{word} || '%'
			</if>
			<if test="key.indexOf('w') >= 0">
				or writer like '%' || #{word} || '%'
			</if>
		</trim> 
	</if> 	
  	</sql>
  	
  	<select id="view" resultType="org.zerock.myreview.vo.MyreviewVO">
  	select r.rno, r.title, r.content, r.writeDate, r.id, r.filename, r.stars
  	from review r, member m
  	where (r.rno = #{rno})
  	and (r.id = m.id)
  	</select>
  	
  <insert id="write">
  insert into review(rno, title, content, filename, id, stars)
  values (review_seq.nextval, #{title}, #{content}, #{filename, jdbcType=VARCHAR}, #{id}, #{stars})
  </insert>
  
  <update id="update">
  update review set
  title = #{title}, content = #{content}, filename = #{filename, jdbcType=VARCHAR}, stars = #{stars}
  where rno = #{rno}
  </update>
  
  <delete id="delete">
  delete from review
  where rno = #{rno}
  </delete>
  </mapper>